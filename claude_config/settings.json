{
  "permissions": {
    "allow": [
      "Read(**)",
      "Edit(**)",
      "MultiEdit(**)",
      "Write(**)",
      "Glob(**)",
      "Grep(**)",
      "LS(**)",
      "WebSearch(**)",
      "TodoRead()",
      "TodoWrite(**)",
      "Task(**)",
      "Bash(git status*)",
      "Bash(git log*)",
      "Bash(git diff*)",
      "Bash(git show*)",
      "Bash(git blame*)",
      "Bash(git branch*)",
      "Bash(git remote -v*)",
      "Bash(git config --get*)",
      "Bash(ls*)",
      "Bash(cat *)",
      "Bash(less *)",
      "Bash(head*)",
      "Bash(tail*)",
      "Bash(grep*)",
      "Bash(find*)",
      "Bash(tree*)",
      "Bash(pwd*)",
      "Bash(wc*)",
      "Bash(diff *)",
      "Bash(cd *)",
      "Bash(mv *)",
      "Bash(cp *)",
      "Bash(mkdir *)",
      "Bash(touch *)",
      "Bash(ln -s *)",
      "Bash(chmod +* *)",
      "Bash(chmod -* *)",
      "Bash(export *)",
      "Bash(env *)",
      "Bash(printenv *)",
      "Bash(history *)",
      "Bash(alias *)",
      "Bash(tr *)",
      "Bash(sort *)",
      "Bash(uniq *)",
      "Bash(cut *)",
      "Bash(ps *)",
      "Bash(jobs *)",
      "Bash(whoami *)",
      "Bash(id *)",
      "Bash(uptime *)",
      "Bash(df *)",
      "Bash(du *)",
      "Bash(free *)",
      "Bash(sed -n*)",
      "Bash(awk*)",
      "Bash(cut*)",
      "Bash(sort*)",
      "Bash(uniq*)",
      "Bash(basename *)",
      "Bash(dirname *)",
      "Bash(realpath *)",
      "Bash(readlink *)",
      "Bash(curl*)",
      "Bash(jq*)",
      "Bash(yq eval*)",
      "Bash(python*)",
      "Bash(python3*)",
      "Bash(node*)",
      "Bash(npm list*)",
      "Bash(npm run*)",
      "Bash(npx*)",
      "Bash(black --check*)",
      "Bash(black --diff*)",
      "Bash(pylint*)",
      "Bash(flake8*)",
      "Bash(mypy*)",
      "Bash(eslint*)",
      "Bash(pytest*)",
      "Bash(make test*)",
      "Bash(npm test*)",
      "Bash(make -n*)",
      "Bash(man *)",
      "Bash(pydoc*)",
      "Bash(which *)",
      "Bash(type *)",
      "Bash(echo *)",
      "Bash(printf *)",
      "Bash(test *)",
      "Bash(true*)",
      "Bash(false*)",
      "Bash(* | grep*)",
      "Bash(* | jq*)",
      "Bash(* | head*)",
      "Bash(* | tail*)",
      "Bash(* | wc*)",
      "Bash(* | sort*)",
      "Bash(* | uniq*)",
      "mcp__zen__analyze",
      "mcp__zen__analyze"
    ]
  },
  "enableAllProjectMcpServers": true,
  "statusLine": {
    "type": "command",
    "command": "BRANCH=$(git branch --show-current 2>/dev/null); TIME=$(date +%H:%M); MODEL=$(claude --version 2>/dev/null | grep -o 'claude-[^[:space:]]*' | head -1 || echo 'claude'); if [ -n \"$BRANCH\" ]; then printf \"\\033[37m%s\\033[0m \\033[36m%s\\033[0m@\\033[33m%s\\033[0m \\033[32m%s\\033[0m \\033[35m%s\\033[0m \\033[34m%s\\033[0m\" \"$TIME\" \"$(whoami)\" \"$(hostname -s)\" \"$(basename $(pwd))\" \"$BRANCH\" \"$MODEL\"; else printf \"\\033[37m%s\\033[0m \\033[36m%s\\033[0m@\\033[33m%s\\033[0m \\033[32m%s\\033[0m \\033[34m%s\\033[0m\" \"$TIME\" \"$(whoami)\" \"$(hostname -s)\" \"$(basename $(pwd))\" \"$MODEL\"; fi"
  }
}
